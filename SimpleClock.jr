import java.util.*;
import edu.ucdavis.jr.*;

public class SimpleClock {

  public op void tick();
  public cap void() alarmCap;
  
  private int delay;

  public SimpleClock(int delay) {
    this.delay = delay;
    this.alarmCap = new op void();
    send timer(alarmCap, delay*3);
    
  }


  private process ticker {
    long next = System.nanoTime();
    long w;
    do {
      next += (delay*1000000);
      w = Math.max(0,(next-System.nanoTime())/1000000);
      edu.ucdavis.jr.JR.nap(w);
      send tick();
    } while (true);
  }

  public op void timer(cap void() alarm, int ms) {
    edu.ucdavis.jr.JR.nap(ms);
    alarm();
  }

  //Nedan är kod för som är ekvivalent med ovanstående timer
  /*
  public op void timer(cap void() alarm, int ms);
  
  public process abc
  {
    cap void() alarm;
    int ms;
    while(true) 
      {
	receive timer(alarm, ms);
	edu.ucdavis.jr.JR.nap(ms);
	alarm();
	
      }    
  }
  */  

  public process listener 
  {

    while(true)
      {	
	inni void tick()
	{
	  System.out.println("Tick");	   
	}
	[] void alarmCap()
	  {
	    break;	    
	  }    
      }
    System.out.println("Nu har alarmet gått");
    
  }
  

  public static void main(String[] args) {
    new SimpleClock(1000);
    System.out.println("Done.");    
  }
}